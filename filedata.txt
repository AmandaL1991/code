PD9waHAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICAqIFNpbXBsZSBQSFAgRmlsZSBNYW5hZ2VyICAqIENvcHlyaWdodCBKb2huIENhbXBiZWxsIChqY2FtcGJlbGwxKSAgKiAgKiBMaXNjZW5zZTogTUlUICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gIC8q
IFVuY29tbWVudCBzZWN0aW9uIGJlbG93LCBpZiB5b3Ugd2FudCBhIHRyaXZpYWwgcGFzc3dvcmQgcHJvdGVjdGlvbiAqLyAgLyogJFBBU1NXT1JEID0gJ3NmbSc7ICBzZXNzaW9uX3N0YXJ0KCk7IGlmKCEkX1NFU1NJT05bJ19zZm1fYWxsb3dlZCddKSB7IAkvLyBzaGExLCBhbmQgcmFuZG9tIGJ5dGVzIH
RvIHRod2FydCB0aW1pbmcgYXR0YWNrcy4gIE5vdCBtZWFudCBhcyBzZWN1cmUgaGFzaGluZy4gCSR0ID0gYmluMmhleChvcGVuc3NsX3JhbmRvbV9wc2V1ZG9fYnl0ZXMoMTApKTsJIAlpZigkX1BPU1RbJ3AnXSAmJiBzaGExKCR0LiRfUE9TVFsncCddKSA9PT0gc2hhMSgkdC4kUEFTU1dPUkQpKSB7IAkJ
JF9TRVNTSU9OWydfc2ZtX2FsbG93ZWQnXSA9IHRydWU7IAkJaGVhZGVyKCdMb2NhdGlvbjogPycpOyAJfSAJZWNobyAnPGh0bWw+PGJvZHk+PGZvcm0gYWN0aW9uPT8gbWV0aG9kPXBvc3Q+UEFTU1dPUkQ6PGlucHV0IHR5cGU9cGFzc3dvcmQgbmFtZT1wIC8+PC9mb3JtPjwvYm9keT48L2h0bWw+JzsgIA
lleGl0OyB9ICovICAvLyBtdXN0IGJlIGluIFVURi04IG9yIGBiYXNlbmFtZWAgZG9lc24ndCB3b3JrIHNldGxvY2FsZShMQ19BTEwsICdlbl9VUy5VVEYtOCcpOyAgJHRtcCA9IHJlYWxwYXRoKCRfUkVRVUVTVFsnZmlsZSddKTsgaWYgKCR0bXAgPT09IGZhbHNlKSAgICAgZXJyKDQwNCwgJ0ZpbGUgb3Ig
RGlyZWN0b3J5IE5vdCBGb3VuZCcpOyBpZiAoc3Vic3RyKCR0bXAsIDAsIHN0cmxlbihfX0RJUl9fKSkgIT09IF9fRElSX18pICAgICBlcnIoNDAzLCAiRm9yYmlkZGVuIik7ICAgICRmaWxlID0gJF9SRVFVRVNUWydmaWxlJ10gPzogJy4nOyBpZiAoJF9HRVRbJ2RvJ10gPT0gJ2xpc3QnKSB7ICAgICBpZi
AoaXNfZGlyKCRmaWxlKSkgeyAgICAgICAgICRkaXJlY3RvcnkgPSAkZmlsZTsgICAgICAgICAkcmVzdWx0ID0gYXJyYXkoKTsgICAgICAgICAkZmlsZXMgPSBhcnJheV9kaWZmKHNjYW5kaXIoJGRpcmVjdG9yeSksIGFycmF5KCcuJywgJy4uJykpOyAgICAgICAgIGZvcmVhY2ggKCRmaWxlcyBhcyAkZW50
cnkpIHsgICAgICAgICAgICAgJGkgPSAkZGlyZWN0b3J5IC4gJy8nIC4gJGVudHJ5OyAgICAgICAgICAgICAkc3RhdCA9IHN0YXQoJGkpOyAgICAgICAgICAgICAkcmVzdWx0W10gPSBhcnJheSggICAgICAgICAgICAgICAgICdtdGltZScgPT4gJHN0YXRbJ210aW1lJ10sICAgICAgICAgICAgICAgICAnc2
l6ZScgPT4gJHN0YXRbJ3NpemUnXSwgICAgICAgICAgICAgICAgICduYW1lJyA9PiBiYXNlbmFtZSgkaSksICAgICAgICAgICAgICAgICAncGF0aCcgPT4gcHJlZ19yZXBsYWNlKCdAXlwuL0AnLCAnJywgJGkpLCAgICAgICAgICAgICAgICAgJ2lzX2RpcicgPT4gaXNfZGlyKCRpKSwgICAgICAgICAgICAg
ICAgICdpc19kZWxldGVhYmxlJyA9PiAoIWlzX2RpcigkaSkgJiYgaXNfd3JpdGFibGUoJGRpcmVjdG9yeSkpIHx8ICAgICAgICAgICAgICAgICAgICAgKGlzX2RpcigkaSkgJiYgaXNfd3JpdGFibGUoJGRpcmVjdG9yeSkgJiYgaXNfcmVjdXJzaXZlbHlfZGVsZXRlYWJsZSgkaSkpLCAgICAgICAgICAgIC
AgICAgJ2lzX3JlYWRhYmxlJyA9PiBpc19yZWFkYWJsZSgkaSksICAgICAgICAgICAgICAgICAnaXNfd3JpdGFibGUnID0+IGlzX3dyaXRhYmxlKCRpKSwgICAgICAgICAgICAgICAgICdpc19leGVjdXRhYmxlJyA9PiBpc19leGVjdXRhYmxlKCRpKSwgICAgICAgICAgICAgKTsgICAgICAgICB9ICAgICB9
IGVsc2UgeyAgICAgICAgIGVycig0MTIsICJOb3QgYSBEaXJlY3RvcnkiKTsgICAgIH0gICAgIGVjaG8ganNvbl9lbmNvZGUoYXJyYXkoJ3N1Y2Nlc3MnID0+IHRydWUsICdpc193cml0YWJsZScgPT4gaXNfd3JpdGFibGUoJGZpbGUpLCAncmVzdWx0cycgPT4gJHJlc3VsdCkpOyAgICAgZXhpdDsgfSBlbH
NlaWYgKCRfUE9TVFsnZG8nXSA9PSAnZGVsZXRlJykgeyAgICAgcm1yZigkZmlsZSk7ICAgICBlY2hvIGpzb25fZW5jb2RlKGFycmF5KCdzdWNjZXNzJyA9PiB0cnVlKSk7ICAgICBleGl0OyB9IGVsc2VpZiAoJF9QT1NUWydkbyddID09ICdta2RpcicpIHsgICAgIGNoZGlyKCRmaWxlKTsgICAgIEBta2Rp
cigkX1BPU1RbJ25hbWUnXSk7ICAgICBlY2hvIGpzb25fZW5jb2RlKGFycmF5KCdzdWNjZXNzJyA9PiB0cnVlKSk7ICAgICBleGl0OyB9IGVsc2VpZiAoJF9QT1NUWydkbyddID09ICd1cGxvYWQnKSB7ICAgICB2YXJfZHVtcCgkX1BPU1QpOyAgICAgdmFyX2R1bXAoJF9GSUxFUyk7ICAgICB2YXJfZHVtcC
gkX0ZJTEVTWydmaWxlX2RhdGEnXVsndG1wX25hbWUnXSk7ICAgICB2YXJfZHVtcChtb3ZlX3VwbG9hZGVkX2ZpbGUoJF9GSUxFU1snZmlsZV9kYXRhJ11bJ3RtcF9uYW1lJ10sICRmaWxlIC4gJy8nIC4gJF9GSUxFU1snZmlsZV9kYXRhJ11bJ25hbWUnXSkpOyAgICAgZXhpdDsgfSBlbHNlaWYgKCRfR0VU
WydkbyddID09ICdkb3dubG9hZCcpIHsgICAgICRmaWxlbmFtZSA9IGJhc2VuYW1lKCRmaWxlKTsgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiAnIC4gbWltZV9jb250ZW50X3R5cGUoJGZpbGUpKTsgICAgIGhlYWRlcignQ29udGVudC1MZW5ndGg6ICcgLiBmaWxlc2l6ZSgkZmlsZSkpOyAgICAgaGVhZG
VyKHNwcmludGYoJ0NvbnRlbnQtRGlzcG9zaXRpb246IGF0dGFjaG1lbnQ7IGZpbGVuYW1lPSVzJywgICAgICAgICBzdHJwb3MoJ01TSUUnLCAkX1NFUlZFUlsnSFRUUF9SRUZFUkVSJ10pID8gcmF3dXJsZW5jb2RlKCRmaWxlbmFtZSkgOiAiXCIkZmlsZW5hbWVcIiIpKTsgICAgIG9iX2ZsdXNoKCk7ICAg
ICByZWFkZmlsZSgkZmlsZSk7ICAgICBleGl0OyB9IGVsc2VpZiAoJF9QT1NUWydkbyddID09ICd6aXAnKSB7ICAgICAkZmlsZW5hbWUgPSBiYXNlbmFtZSgkZmlsZSk7ICAgICBlY2hvICRmaWxlLiJcbiI7ICAgICBlY2hvICRmaWxlbmFtZTsgICAgICAvLyBJbml0aWFsaXplIGFyY2hpdmUgb2JqZWN0IC
AgICAkemlwID0gbmV3IFppcEFyY2hpdmUoKTsgICAgICR6aXAtPm9wZW4oJGZpbGUuIi56aXAiLCBaaXBBcmNoaXZlOjpDUkVBVEUgfCBaaXBBcmNoaXZlOjpPVkVSV1JJVEUpOyAgICAgIC8vIENyZWF0ZSByZWN1cnNpdmUgZGlyZWN0b3J5IGl0ZXJhdG9yICAgICAvKiogQHZhciBTcGxGaWxlSW5mb1td
ICRmaWxlcyAqLyAgICAgJGZpbGVzID0gbmV3IFJlY3Vyc2l2ZUl0ZXJhdG9ySXRlcmF0b3IoICAgICAgICAgbmV3IFJlY3Vyc2l2ZURpcmVjdG9yeUl0ZXJhdG9yKF9fRElSX18uIi8iLiRmaWxlKSwgICAgICAgICBSZWN1cnNpdmVJdGVyYXRvckl0ZXJhdG9yOjpMRUFWRVNfT05MWSAgICAgKTsgICAgIC
Bmb3JlYWNoICgkZmlsZXMgYXMgJG5hbWUgPT4gJGZpbGV6KSAgICAgeyAgICAgICAgIC8vIFNraXAgZGlyZWN0b3JpZXMgKHRoZXkgd291bGQgYmUgYWRkZWQgYXV0b21hdGljYWxseSkgICAgICAgICBpZiAoISRmaWxlei0+aXNEaXIoKSkgICAgICAgICB7ICAgICAgICAgICAgIC8vIEdldCByZWFsIGFu
ZCByZWxhdGl2ZSBwYXRoIGZvciBjdXJyZW50IGZpbGUgICAgICAgICAgICAgJGZpbGVQYXRoID0gJGZpbGV6LT5nZXRSZWFsUGF0aCgpOyAgICAgICAgICAgICAkcmVsYXRpdmVQYXRoID0gc3Vic3RyKCRmaWxlUGF0aCwgc3RybGVuKF9fRElSX18uIi8iLiRmaWxlKSArIDEpOyAgICAgICAgICAgICAgLy
8gQWRkIGN1cnJlbnQgZmlsZSB0byBhcmNoaXZlICAgICAgICAgICAgICR6aXAtPmFkZEZpbGUoJGZpbGVQYXRoLCAkcmVsYXRpdmVQYXRoKTsgICAgICAgICB9ICAgICB9ICAgICAgLy8gWmlwIGFyY2hpdmUgd2lsbCBiZSBjcmVhdGVkIG9ubHkgYWZ0ZXIgY2xvc2luZyBvYmplY3QgICAgICR6aXAtPmNs
b3NlKCk7ICAgICBlY2hvIGpzb25fZW5jb2RlKGFycmF5KCdzdWNjZXNzJyA9PiB0cnVlKSk7ICAgICBleGl0OyB9IGZ1bmN0aW9uIHJtcmYoJGRpcikgeyAgICAgaWYgKGlzX2RpcigkZGlyKSkgeyAgICAgICAgICRmaWxlcyA9IGFycmF5X2RpZmYoc2NhbmRpcigkZGlyKSwgYXJyYXkoJy4nLCAnLi4nKS
k7ICAgICAgICAgZm9yZWFjaCAoJGZpbGVzIGFzICRmaWxlKSAgICAgICAgICAgICBybXJmKCIkZGlyLyRmaWxlIik7ICAgICAgICAgcm1kaXIoJGRpcik7ICAgICB9IGVsc2UgeyAgICAgICAgIHVubGluaygkZGlyKTsgICAgIH0gfSAgZnVuY3Rpb24gaXNfcmVjdXJzaXZlbHlfZGVsZXRlYWJsZSgkZCkg
eyAgICAgJHN0YWNrID0gYXJyYXkoJGQpOyAgICAgd2hpbGUgKCRkaXIgPSBhcnJheV9wb3AoJHN0YWNrKSkgeyAgICAgICAgIGlmICghaXNfcmVhZGFibGUoJGRpcikgfHwgIWlzX3dyaXRhYmxlKCRkaXIpKSAgICAgICAgICAgICByZXR1cm4gZmFsc2U7ICAgICAgICAgJGZpbGVzID0gYXJyYXlfZGlmZi
hzY2FuZGlyKCRkaXIpLCBhcnJheSgnLicsICcuLicpKTsgICAgICAgICBmb3JlYWNoICgkZmlsZXMgYXMgJGZpbGUpIGlmIChpc19kaXIoJGZpbGUpKSB7ICAgICAgICAgICAgICRzdGFja1tdID0gIiRkaXIvJGZpbGUiOyAgICAgICAgIH0gICAgIH0gICAgIHJldHVybiB0cnVlOyB9ICBmdW5jdGlvbiBl
cnIoJGNvZGUsICRtc2cpIHsgICAgIGVjaG8ganNvbl9lbmNvZGUoYXJyYXkoJ2Vycm9yJyA9PiBhcnJheSgnY29kZScgPT4gaW50dmFsKCRjb2RlKSwgJ21zZycgPT4gJG1zZykpKTsgICAgIGV4aXQ7IH0gIGZ1bmN0aW9uIGFzQnl0ZXMoJGluaV92KSB7ICAgICAkaW5pX3YgPSB0cmltKCRpbmlfdik7IC
AgICAkcyA9IGFycmF5KCdnJyA9PiAxIDw8IDMwLCAnbScgPT4gMSA8PCAyMCwgJ2snID0+IDEgPDwgMTApOyAgICAgcmV0dXJuIGludHZhbCgkaW5pX3YpICogKCRzW3N0cnRvbG93ZXIoc3Vic3RyKCRpbmlfdiwgLTEpKV0gPzogMSk7IH0gICRNQVhfVVBMT0FEX1NJWkUgPSBtaW4oYXNCeXRlcyhpbmlf
Z2V0KCdwb3N0X21heF9zaXplJykpLCBhc0J5dGVzKGluaV9nZXQoJ3VwbG9hZF9tYXhfZmlsZXNpemUnKSkpOyA/PiA8IURPQ1RZUEUgaHRtbD4gPGh0bWw+IDxoZWFkPiAgICAgPG1ldGEgaHR0cC1lcXVpdj0iY29udGVudC10eXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiPiAgIC
AgPGxpbmsgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3dhdGNoLzMuMy40L3NsYXRlL2Jvb3RzdHJhcC5taW4uY3NzIiByZWw9InN0eWxlc2hlZXQiPiAgICAgPHN0eWxlPiAgICAgICAgIC5idG4tZmlsZSB7ICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgICAg
ICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgICAgICAgICB9ICAgICAgICAgIC5idG4tZmlsZSBpbnB1dFt0eXBlPWZpbGVdIHsgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyAgICAgICAgICAgICB0b3A6IDA7ICAgICAgICAgICAgIHJpZ2h0OiAwOyAgICAgICAgICAgICBtaW4td2lkdGg6ID
EwMCU7ICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7ICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTAwcHg7ICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyAgICAgICAgICAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MCk7ICAgICAgICAgICAgIG9wYWNpdHk6IDA7ICAgICAgICAgICAgIG91
dGxpbmU6IG5vbmU7ICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlOyAgICAgICAgICAgICBjdXJzb3I6IGluaGVyaXQ7ICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyAgICAgICAgIH0gICAgIDwvc3R5bGU+ICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jb2RlLmpxdWVyeS5jb20vanF1ZXJ5LT
IuMS40Lm1pbi5qcyI+PC9zY3JpcHQ+ICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4zLjUvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+ICAgICA8c2NyaXB0PiAgICAgICAgIChmdW5jdGlvbiAoJCkgeyAgICAgICAgICAgICAkLmZu
LnRhYmxlc29ydGVyID0gZnVuY3Rpb24gKCkgeyAgICAgICAgICAgICAgICAgdmFyICR0YWJsZSA9IHRoaXM7ICAgICAgICAgICAgICAgICB0aGlzLmZpbmQoJ3RoJykuY2xpY2soZnVuY3Rpb24gKCkgeyAgICAgICAgICAgICAgICAgICAgIHZhciBpZHggPSAkKHRoaXMpLmluZGV4KCk7ICAgICAgICAgIC
AgICAgICAgICAgdmFyIGRpcmVjdGlvbiA9ICQodGhpcykuaGFzQ2xhc3MoJ3NvcnRfYXNjJyk7ICAgICAgICAgICAgICAgICAgICAgJHRhYmxlLnRhYmxlc29ydGJ5KGlkeCwgZGlyZWN0aW9uKTsgICAgICAgICAgICAgICAgIH0pOyAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7ICAgICAgICAgICAg
IH07ICAgICAgICAgICAgICQuZm4udGFibGVzb3J0YnkgPSBmdW5jdGlvbiAoaWR4LCBkaXJlY3Rpb24pIHsgICAgICAgICAgICAgICAgIHZhciAkcm93cyA9IHRoaXMuZmluZCgndGJvZHkgdHInKTsgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBlbGVtZW50VG9WYWwoYSkgeyAgICAgICAgICAgICAgIC
AgICAgIHZhciAkYV9lbGVtID0gJChhKS5maW5kKCd0ZDpudGgtY2hpbGQoJyArIChpZHggKyAxKSArICcpJyk7ICAgICAgICAgICAgICAgICAgICAgdmFyIGFfdmFsID0gJGFfZWxlbS5hdHRyKCdkYXRhLXNvcnQnKSB8fCAkYV9lbGVtLnRleHQoKTsgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGFf
dmFsID09IHBhcnNlSW50KGFfdmFsKSA/IHBhcnNlSW50KGFfdmFsKSA6IGFfdmFsKTsgICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgICAkcm93cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7ICAgICAgICAgICAgICAgICAgICAgdmFyIGFfdmFsID0gZWxlbWVudFRvVmFsKGEpLCBiX3ZhbCA9IG
VsZW1lbnRUb1ZhbChiKTsgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGFfdmFsID4gYl92YWwgPyAxIDogKGFfdmFsID09IGJfdmFsID8gMCA6IC0xKSkgKiAoZGlyZWN0aW9uID8gMSA6IC0xKTsgICAgICAgICAgICAgICAgIH0pICAgICAgICAgICAgICAgICB0aGlzLmZpbmQoJ3RoJykucmVtb3Zl
Q2xhc3MoJ3NvcnRfYXNjIHNvcnRfZGVzYycpOyAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCd0aGVhZCB0aDpudGgtY2hpbGQoJyArIChpZHggKyAxKSArICcpJykuYWRkQ2xhc3MoZGlyZWN0aW9uID8gJ3NvcnRfZGVzYycgOiAnc29ydF9hc2MnKTsgICAgICAgICAgICAgICAgIGZvciAodmFyIG
kgPSAwOyBpIDwgJHJvd3MubGVuZ3RoOyBpKyspICAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHBlbmQoJHJvd3NbaV0pOyAgICAgICAgICAgICAgICAgdGhpcy5zZXR0YWJsZXNvcnRtYXJrZXJzKCk7ICAgICAgICAgICAgICAgICByZXR1cm4gdGhpczsgICAgICAgICAgICAgfSAgICAgICAgICAgICAk
LmZuLnJldGFibGVzb3J0ID0gZnVuY3Rpb24gKCkgeyAgICAgICAgICAgICAgICAgdmFyICRlID0gdGhpcy5maW5kKCd0aGVhZCB0aC5zb3J0X2FzYywgdGhlYWQgdGguc29ydF9kZXNjJyk7ICAgICAgICAgICAgICAgICBpZiAoJGUubGVuZ3RoKSAgICAgICAgICAgICAgICAgICAgIHRoaXMudGFibGVzb3
J0YnkoJGUuaW5kZXgoKSwgJGUuaGFzQ2xhc3MoJ3NvcnRfZGVzYycpKTsgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpczsgICAgICAgICAgICAgfSAgICAgICAgICAgICAkLmZuLnNldHRhYmxlc29ydG1hcmtlcnMgPSBmdW5jdGlvbiAoKSB7ICAgICAgICAgICAgICAgICB0aGlzLmZpbmQoJ3RoZWFk
IHRoIHNwYW4uaW5kaWNhdG9yJykucmVtb3ZlKCk7ICAgICAgICAgICAgICAgICB0aGlzLmZpbmQoJ3RoZWFkIHRoLnNvcnRfYXNjJykuYXBwZW5kKCc8c3BhbiBjbGFzcz0iaW5kaWNhdG9yIj4mZGFycjs8c3Bhbj4nKTsgICAgICAgICAgICAgICAgIHRoaXMuZmluZCgndGhlYWQgdGguc29ydF9kZXNjJy
kuYXBwZW5kKCc8c3BhbiBjbGFzcz0iaW5kaWNhdG9yIj4mdWFycjs8c3Bhbj4nKTsgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzOyAgICAgICAgICAgICB9ICAgICAgICAgfSkoalF1ZXJ5KTsgICAgICAgICAkKGZ1bmN0aW9uICgpIHsgICAgICAgICAgICAgdmFyIFhTUkYgPSAoZG9jdW1lbnQuY29v
a2llLm1hdGNoKCcoXnw7IClfc2ZtX3hzcmY9KFteO10qKScpIHx8IDApWzJdOyAgICAgICAgICAgICB2YXIgTUFYX1VQTE9BRF9TSVpFID0gPD9waHAgZWNobyAkTUFYX1VQTE9BRF9TSVpFID8+OyAgICAgICAgICAgICB2YXIgJHRib2R5ID0gJCgnI2xpc3QnKTsgICAgICAgICAgICAgJCh3aW5kb3cpLm
JpbmQoJ2hhc2hjaGFuZ2UnLCBsaXN0KS50cmlnZ2VyKCdoYXNoY2hhbmdlJyk7ICAgICAgICAgICAgICQoJyN0YWJsZScpLnRhYmxlc29ydGVyKCk7ICAgICAgICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgJy5kZWxldGUnLCBmdW5jdGlvbiAoZGF0YSkgeyAgICAgICAgICAgICAgICAgJC5wb3N0
KCIiLCB7J2RvJzogJ2RlbGV0ZScsIGZpbGU6ICQodGhpcykuYXR0cignZGF0YS1maWxlJyksIHhzcmY6IFhTUkZ9LCBmdW5jdGlvbiAocmVzcG9uc2UpIHsgICAgICAgICAgICAgICAgICAgICBsaXN0KCk7ICAgICAgICAgICAgICAgICB9LCAnanNvbicpOyAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbH
NlOyAgICAgICAgICAgICB9KTsgICAgICAgICAgICAgICQoJ2JvZHknKS5vbignY2xpY2snLCAnLnppcCcsIGZ1bmN0aW9uIChkYXRhKSB7ICAgICAgICAgICAgICAgICAkLnBvc3QoIiIsIHsnZG8nOiAnemlwJywgZmlsZTogJCh0aGlzKS5hdHRyKCdkYXRhLWZpbGUnKSwgeHNyZjogWFNSRn0sIGZ1bmN0
aW9uIChyZXNwb25zZSkgeyAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ3ZXFlcXdlIik7ICAgICAgICAgICAgICAgICAgICAgbGlzdCgpOyAgICAgICAgICAgICAgICAgfSwgJ2pzb24nKTsgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgICAgICAgICAgICAgfSk7ICAgICAgICAgIC
AgICAkKCcjbWtkaXInKS5zdWJtaXQoZnVuY3Rpb24gKGUpIHsgICAgICAgICAgICAgICAgIHZhciBoYXNodmFsID0gd2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpLCAgICAgICAgICAgICAgICAgICAgICRkaXIgPSAkKHRoaXMpLmZpbmQoJ1tuYW1lPW5hbWVdJyk7ICAgICAgICAgICAgICAgICBl
LnByZXZlbnREZWZhdWx0KCk7ICAgICAgICAgICAgICAgICAkZGlyLnZhbCgpLmxlbmd0aCAmJiAkLnBvc3QoJz8nLCB7ICAgICAgICAgICAgICAgICAgICAgJ2RvJzogJ21rZGlyJywgICAgICAgICAgICAgICAgICAgICBuYW1lOiAkZGlyLnZhbCgpLCAgICAgICAgICAgICAgICAgICAgIHhzcmY6IFhTUk
YsICAgICAgICAgICAgICAgICAgICAgZmlsZTogaGFzaHZhbCAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gKGRhdGEpIHsgICAgICAgICAgICAgICAgICAgICBsaXN0KCk7ICAgICAgICAgICAgICAgICB9LCAnanNvbicpOyAgICAgICAgICAgICAgICAgJGRpci52YWwoJycpOyAgICAgICAgICAgICAg
ICAgcmV0dXJuIGZhbHNlOyAgICAgICAgICAgICB9KTsgICAgICAgICAgICAgIC8vIGZpbGUgdXBsb2FkIHN0dWZmICAgICAgICAgICAgICQoJyNmaWxlX2Ryb3BfdGFyZ2V0JykuYmluZCgnZHJhZ292ZXInLCBmdW5jdGlvbiAoKSB7ICAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdkcmFnX2
92ZXInKTsgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgICAgICAgICAgICAgfSkuYmluZCgnZHJhZ2VuZCcsIGZ1bmN0aW9uICgpIHsgICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ2RyYWdfb3ZlcicpOyAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAgICAgICAgICAg
ICB9KS5iaW5kKCdkcm9wJywgZnVuY3Rpb24gKGUpIHsgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsgICAgICAgICAgICAgICAgIHZhciBmaWxlcyA9IGUub3JpZ2luYWxFdmVudC5kYXRhVHJhbnNmZXIuZmlsZXM7ICAgICAgICAgICAgICAgICAkLmVhY2goZmlsZXMsIGZ1bmN0aW9uIC
hrLCBmaWxlKSB7ICAgICAgICAgICAgICAgICAgICAgdXBsb2FkRmlsZShmaWxlKTsgICAgICAgICAgICAgICAgIH0pOyAgICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygnZHJhZ19vdmVyJyk7ICAgICAgICAgICAgIH0pOyAgICAgICAgICAgICAkKCdpbnB1dFt0eXBlPWZpbGVdJykuY2hh
bmdlKGZ1bmN0aW9uIChlKSB7ICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7ICAgICAgICAgICAgICAgICAkLmVhY2godGhpcy5maWxlcywgZnVuY3Rpb24gKGssIGZpbGUpIHsgICAgICAgICAgICAgICAgICAgICB1cGxvYWRGaWxlKGZpbGUpOyAgICAgICAgICAgICAgICAgfSk7ICAgIC
AgICAgICAgIH0pOyAgICAgICAgICAgICAgIGZ1bmN0aW9uIHVwbG9hZEZpbGUoZmlsZSkgeyAgICAgICAgICAgICAgICAgdmFyIGZvbGRlciA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cigxKTsgICAgICAgICAgICAgICAgICBpZiAoZmlsZS5zaXplID4gTUFYX1VQTE9BRF9TSVpFKSB7ICAgICAg
ICAgICAgICAgICAgICAgdmFyICRlcnJvcl9yb3cgPSByZW5kZXJGaWxlU2l6ZUVycm9yUm93KGZpbGUsIGZvbGRlcik7ICAgICAgICAgICAgICAgICAgICAgJCgnI3VwbG9hZF9wcm9ncmVzcycpLmFwcGVuZCgkZXJyb3Jfcm93KTsgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2V0VGltZW91dChmdW
5jdGlvbiAoKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICRlcnJvcl9yb3cuZmFkZU91dCgpOyAgICAgICAgICAgICAgICAgICAgIH0sIDUwMDApOyAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgICB2YXIgJHJvdyA9IHJlbmRl
ckZpbGVVcGxvYWRSb3coZmlsZSwgZm9sZGVyKTsgICAgICAgICAgICAgICAgICQoJyN1cGxvYWRfcHJvZ3Jlc3MnKS5hcHBlbmQoJHJvdyk7ICAgICAgICAgICAgICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTsgICAgICAgICAgICAgICAgIGZkLmFwcGVuZCgnZmlsZV9kYXRhJywgZmlsZSk7ICAgIC
AgICAgICAgICAgICBmZC5hcHBlbmQoJ2ZpbGUnLCBmb2xkZXIpOyAgICAgICAgICAgICAgICAgZmQuYXBwZW5kKCd4c3JmJywgWFNSRik7ICAgICAgICAgICAgICAgICBmZC5hcHBlbmQoJ2RvJywgJ3VwbG9hZCcpOyAgICAgICAgICAgICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOyAg
ICAgICAgICAgICAgICAgeGhyLm9wZW4oJ1BPU1QnLCAnPycpOyAgICAgICAgICAgICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsgICAgICAgICAgICAgICAgICAgICAkcm93LnJlbW92ZSgpOyAgICAgICAgICAgICAgICAgICAgIGxpc3QoKTsgICAgICAgICAgICAgICAgIH07ICAgICAgICAgIC
AgICAgICB4aHIudXBsb2FkLm9ucHJvZ3Jlc3MgPSBmdW5jdGlvbiAoZSkgeyAgICAgICAgICAgICAgICAgICAgIGlmIChlLmxlbmd0aENvbXB1dGFibGUpIHsgICAgICAgICAgICAgICAgICAgICAgICAgJHJvdy5maW5kKCcucHJvZ3Jlc3MtYmFyJykuY3NzKCd3aWR0aCcsIChlLmxvYWRlZCAvIGUudG90
YWwgKiAxMDAgfCAwKSArICclJyk7ICAgICAgICAgICAgICAgICAgICAgfSAgICAgICAgICAgICAgICAgfTsgICAgICAgICAgICAgICAgIHhoci5zZW5kKGZkKTsgICAgICAgICAgICAgfSAgICAgICAgICAgICAgZnVuY3Rpb24gcmVuZGVyRmlsZVVwbG9hZFJvdyhmaWxlLCBmb2xkZXIpIHsgICAgICAgIC
AgICAgICAgIC8vdmFyICRoZWFkZXIgPSAgICAgICAgICAgICAgICAgcmV0dXJuICRyb3cgPSAkKCc8ZGl2IGNsYXNzPSJwYW5lbCBwYW5lbC1wcmltYXJ5IiAvPicpICAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgnPGRpdiBjbGFzcz0icGFuZWwtaGVhZGluZyI+PGgzIGNsYXNzPSJwYW5lbC10aXRs
ZSIgPicgKyAoZm9sZGVyID8gZm9sZGVyICsgJy8nIDogJycpICAgICAgICAgICAgICAgICAgICAgKyBmaWxlLm5hbWUgKyAnIC0gJyArIGZvcm1hdEZpbGVTaXplKGZpbGUuc2l6ZSkgKyAnPC9oMz48L2Rpdj4nKSAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoJCgnPGRpdiBjbGFzcz0icHJvZ3Jlc3
NfdHJhY2sgcHJvZ3Jlc3MgcHJvZ3Jlc3Mtc3RyaXBlZCBhY3RpdmUiIHN0eWxlPSJtYXJnaW46MCI+PGRpdiBjbGFzcz0icHJvZ3Jlc3MtYmFyIHByb2dyZXNzLWJhci13YXJuaW5nIj48L2Rpdj48L2Rpdj4nKSkgICAgICAgICAgICAgfSAgICAgICAgICAgICAgZnVuY3Rpb24gcmVuZGVyRmlsZVNpemVF
cnJvclJvdyhmaWxlLCBmb2xkZXIpIHsgICAgICAgICAgICAgICAgIHJldHVybiAkcm93ID0gJCgnPGRpdiBjbGFzcz0iZXJyb3IiIC8+JykgICAgICAgICAgICAgICAgICAgICAuYXBwZW5kKCQoJzxzcGFuIGNsYXNzPSJmaWxldXBsb2FkbmFtZSIgLz4nKS50ZXh0KCdFcnJvcjogJyArIChmb2xkZXIgPy
Bmb2xkZXIgKyAnLycgOiAnJykgKyBmaWxlLm5hbWUpKSAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoJCgnPHNwYW4vPicpLmh0bWwoJyBmaWxlIHNpemUgLSA8Yj4nICsgZm9ybWF0RmlsZVNpemUoZmlsZS5zaXplKSArICc8L2I+JyAgICAgICAgICAgICAgICAgICAgICsgJyBleGNlZWRzIG1heCB1
cGxvYWQgc2l6ZSBvZiA8Yj4nICsgZm9ybWF0RmlsZVNpemUoTUFYX1VQTE9BRF9TSVpFKSArICc8L2I+JykpOyAgICAgICAgICAgICB9ICAgICAgICAgICAgICBmdW5jdGlvbiBsaXN0KCkgeyAgICAgICAgICAgICAgICAgdmFyIGhhc2h2YWwgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSk7IC
AgICAgICAgICAgICAgICAkLmdldCgnPycsIHsnZG8nOiAnbGlzdCcsICdmaWxlJzogaGFzaHZhbH0sIGZ1bmN0aW9uIChkYXRhKSB7ICAgICAgICAgICAgICAgICAgICAgJHRib2R5LmVtcHR5KCk7ICAgICAgICAgICAgICAgICAgICAgcmVuZGVyQnJlYWRjcnVtYnMoaGFzaHZhbCk7ICAgICAgICAgICAg
ICAgICAgICAgaWYgKGRhdGEuc3VjY2VzcykgeyAgICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2goZGF0YS5yZXN1bHRzLCBmdW5jdGlvbiAoaywgdikgeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRib2R5LmFwcGVuZChyZW5kZXJGaWxlUm93KHYpKTsgICAgICAgICAgICAgICAgICAgIC
AgICAgfSk7ICAgICAgICAgICAgICAgICAgICAgICAgICFkYXRhLnJlc3VsdHMubGVuZ3RoICYmICR0Ym9keS5hcHBlbmQoJzx0cj48dGQgY2xhc3M9ImVtcHR5IiBjb2xzcGFuPTU+VGhpcyBmb2xkZXIgaXMgZW1wdHk8L3RkPC90ZD4nKSAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmlzX3dyaXRh
YmxlID8gJCgnYm9keScpLnJlbW92ZUNsYXNzKCdub193cml0ZScpIDogJCgnYm9keScpLmFkZENsYXNzKCdub193cml0ZScpOyAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7ICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihkYXRhLmVycm9yLm1zZyk7ICAgICAgICAgICAgICAgIC
AgICAgfSAgICAgICAgICAgICAgICAgICAgICQoJyN0YWJsZScpLnJldGFibGVzb3J0KCk7ICAgICAgICAgICAgICAgICB9LCAnanNvbicpOyAgICAgICAgICAgICB9ICAgICAgICAgICAgICBmdW5jdGlvbiByZW5kZXJGaWxlUm93KGRhdGEpIHsgICAgICAgICAgICAgICAgIHZhciAkbGluayA9ICQoJzxh
IGNsYXNzPSJuYW1lIiAvPicpICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ2hyZWYnLCBkYXRhLmlzX2RpciA/ICcjJyArIGRhdGEucGF0aCA6ICcuLycgKyBkYXRhLnBhdGgpICAgICAgICAgICAgICAgICAgICAgLmh0bWwoJzxzcGFuIGNsYXNzPSJnbHlwaGljb24gJysoZGF0YS5pc19kaXIgPyAnZ2
x5cGhpY29uLWZvbGRlci1vcGVuJyA6ICdnbHlwaGljb24tZmlsZScpICAgICAgICAgICAgICAgICAgICAgKyciIGFyaWEtaGlkZGVuPSJ0cnVlIj48L3NwYW4+Jm5ic3A7Jm5ic3A7Jm5ic3A7JytkYXRhLm5hbWUpOyAgICAgICAgICAgICAgICAgIHZhciAkemlwX2xpbmsgPSAnPGEgaHJlZj0iIyIgZGF0
YS1maWxlPSInK2RhdGEucGF0aCsnIiAgY2xhc3M9InppcCI+JyArICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWJyaWVmY2FzZSIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj4mbmJzcDsmbmJzcDt6aXA8L2E+Jm5ic3A7Jm5ic3A7Jm5ic3A7JzsgIC
AgICAgICAgICAgICAgIHZhciAkZGxfbGluayA9ICc8YSBocmVmPSI/ZG89ZG93bmxvYWQmZmlsZT0nK2VuY29kZVVSSUNvbXBvbmVudChkYXRhLnBhdGgpKyciPicgKyAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1kb3dubG9hZC1hbHQiIGFyaWEtaGlk
ZGVuPSJ0cnVlIj48L3NwYW4+Jm5ic3A7Jm5ic3A7ZG93bmxvYWQ8L2E+Jm5ic3A7Jm5ic3A7Jm5ic3A7JzsgICAgICAgICAgICAgICAgIHZhciAkZGVsZXRlX2xpbmsgPSAnPGEgaHJlZj0iIyIgZGF0YS1maWxlPSInK2RhdGEucGF0aCsnIiAgY2xhc3M9ImRlbGV0ZSI+JyArICAgICAgICAgICAgICAgIC
AgICAgJzxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXRyYXNoIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9zcGFuPiZuYnNwOyZuYnNwO2RlbGV0ZTwvYT4nOyAgICAgICAgICAgICAgICAgIHZhciBwZXJtcyA9IFtdOyAgICAgICAgICAgICAgICAgaWYgKGRhdGEuaXNfcmVhZGFibGUpIHBlcm1z
LnB1c2goJ3JlYWQnKTsgICAgICAgICAgICAgICAgIGlmIChkYXRhLmlzX3dyaXRhYmxlKSBwZXJtcy5wdXNoKCd3cml0ZScpOyAgICAgICAgICAgICAgICAgaWYgKGRhdGEuaXNfZXhlY3V0YWJsZSkgcGVybXMucHVzaCgnZXhlYycpOyAgICAgICAgICAgICAgICAgdmFyICRodG1sID0gJCgnPHRyIC8+Jy
kgICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoZGF0YS5pc19kaXIgPyAnaXNfZGlyJyA6ICcnKSAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoJCgnPHRkIGNsYXNzPSJmaXJzdCIgLz4nKS5hcHBlbmQoJGxpbmspKSAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoJCgnPHRkLz4nKS5hdHRy
KCdkYXRhLXNvcnQnLCBkYXRhLmlzX2RpciA/IC0xIDogZGF0YS5zaXplKSAgICAgICAgICAgICAgICAgICAgICAgICAuaHRtbCgkKCc8c3BhbiBjbGFzcz0ic2l6ZSIgLz4nKS50ZXh0KGZvcm1hdEZpbGVTaXplKGRhdGEuc2l6ZSkpKSkgICAgICAgICAgICAgICAgICAgICAuYXBwZW5kKCQoJzx0ZC8+Jy
kuYXR0cignZGF0YS1zb3J0JywgZGF0YS5tdGltZSkudGV4dChmb3JtYXRUaW1lc3RhbXAoZGF0YS5tdGltZSkpKSAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoJCgnPHRkLz4nKS50ZXh0KHBlcm1zLmpvaW4oJysnKSkpICAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgkKCc8dGQvPicpLmFwcGVu
ZChkYXRhLmlzX2RpciA/ICR6aXBfbGluayA6ICRkbF9saW5rKS5hcHBlbmQoZGF0YS5pc19kZWxldGVhYmxlID8gJGRlbGV0ZV9saW5rIDogJycpKSAgICAgICAgICAgICAgICAgcmV0dXJuICRodG1sOyAgICAgICAgICAgICB9ICAgICAgICAgICAgICBmdW5jdGlvbiByZW5kZXJCcmVhZGNydW1icyhwYX
RoKSB7ICAgICAgICAgICAgICAgICB2YXIgJGVsZW1lbnQgPSAkKCcjYnJlYWRjcnVtYicpOyAgICAgICAgICAgICAgICAgJGVsZW1lbnQuZW1wdHkoKTsgICAgICAgICAgICAgICAgIHZhciBiYXNlID0gIiI7ICAgICAgICAgICAgICAgICAkZWxlbWVudC5hcHBlbmQoJCgnPGxpPjxhIGhyZWY9Iz5Ib21l
PC9hPjwvbGk+JykpOyAgICAgICAgICAgICAgICAgJC5lYWNoKHBhdGguc3BsaXQoJy8nKSwgZnVuY3Rpb24gKGssIHYpIHsgICAgICAgICAgICAgICAgICAgICBpZiAodikgeyAgICAgICAgICAgICAgICAgICAgICAgICAkZWxlbWVudC5hcHBlbmQoJzxsaT48YSBocmVmPSIjJyArIGJhc2UgKyB2ICsgJy
I+JyArIHYgKyAiPC9hPjwvbGk+Iik7ICAgICAgICAgICAgICAgICAgICAgICAgIGJhc2UgKz0gdiArICcvJzsgICAgICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgICB9KTsgICAgICAgICAgICAgfSAgICAgICAgICAgICAgZnVuY3Rpb24gZm9ybWF0VGltZXN0YW1wKHVuaXhfdGltZXN0YW1w
KSB7ICAgICAgICAgICAgICAgICB2YXIgbSA9IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnXTsgICAgICAgICAgICAgICAgIHZhciBkID0gbmV3IERhdGUodW5peF90aW1lc3RhbXAgKiAxMDAwKTsgIC
AgICAgICAgICAgICAgIHJldHVybiBbbVtkLmdldE1vbnRoKCldLCAnICcsIGQuZ2V0RGF0ZSgpLCAnLCAnLCBkLmdldEZ1bGxZZWFyKCksICIgIiwgICAgICAgICAgICAgICAgICAgICAoZC5nZXRIb3VycygpICUgMTIgfHwgMTIpLCAiOiIsIChkLmdldE1pbnV0ZXMoKSA8IDEwID8gJzAnIDogJycpICsg
ZC5nZXRNaW51dGVzKCksICAgICAgICAgICAgICAgICAgICAgIiAiLCBkLmdldEhvdXJzKCkgPj0gMTIgPyAnUE0nIDogJ0FNJ10uam9pbignJyk7ICAgICAgICAgICAgIH0gICAgICAgICAgICAgIGZ1bmN0aW9uIGZvcm1hdEZpbGVTaXplKGJ5dGVzKSB7ICAgICAgICAgICAgICAgICB2YXIgcyA9IFsnYn
l0ZXMnLCAnS0InLCAnTUInLCAnR0InLCAnVEInLCAnUEInLCAnRUInXTsgICAgICAgICAgICAgICAgIGZvciAodmFyIHBvcyA9IDA7IGJ5dGVzID49IDEwMDA7IHBvcysrLCBieXRlcyAvPSAxMDI0KTsgICAgICAgICAgICAgICAgIHZhciBkID0gTWF0aC5yb3VuZChieXRlcyAqIDEwKTsgICAgICAgICAg
ICAgICAgIHJldHVybiBwb3MgPyBbcGFyc2VJbnQoZCAvIDEwKSwgIi4iLCBkICUgMTAsICIgIiwgc1twb3NdXS5qb2luKCcnKSA6IGJ5dGVzICsgJyBieXRlcyc7ICAgICAgICAgICAgIH0gICAgICAgICB9KSAgICAgIDwvc2NyaXB0PiA8L2hlYWQ+IDxib2R5IGlkPSJmaWxlX2Ryb3BfdGFyZ2V0Ij4gPG
5hdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1maXhlZC10b3AiPiAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4gICAgICAgICA8ZGl2IGNsYXNzPSJuYXZiYXItaGVhZGVyIj4gICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJuYXZiYXItdG9nZ2xlIGNvbGxhcHNlZCIg
ZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iI25hdmJhciIgICAgICAgICAgICAgICAgICAgICBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0ibmF2YmFyIj4gICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzci1vbmx5Ij5Ub2dnbGUgbmF2aWdhdGlvbjwvc3Bhbj
4gICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tYmFyIj48L3NwYW4+ICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4gICAgICAgICAgICAgPC9idXR0b24+ICAgICAgICAg
ICAgIDxhIGNsYXNzPSJuYXZiYXItYnJhbmQiIGhyZWY9IiMiPkZpbGUgTWFuYWdlcjwvYT4gICAgICAgICA8L2Rpdj4gICAgICAgICA8ZGl2IGlkPSJuYXZiYXIiIGNsYXNzPSJjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UiPiAgICAgICAgICAgICA8Zm9ybSBjbGFzcz0ibmF2YmFyLWZvcm0gbmF2YmFyLX
JpZ2h0IiBhY3Rpb249Ij8iIG1ldGhvZD0icG9zdCIgaWQ9Im1rZGlyIj4gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPiAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iQ3JlYXRlIEZvbGRlciIg
aWQ9ImRpcm5hbWUiIG5hbWU9Im5hbWUiPiAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCI+U3VibWl0PC9idXR0b24+ICAgICAgICAgICAgIDwvZm9ybT4gICAgICAgICAgICAgPGRpdiBjbGFzcz0ibm
F2YmFyLWZvcm0gbmF2YmFyLXJpZ2h0Ij4gICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgYnRuLWZpbGUiPiAgICAgICAgICAgICAgICAgICAgIFVwbG9hZCBGaWxlIDxpbnB1dCB0eXBlPSJmaWxlIiBtdWx0aXBsZT4gICAgICAgICAgICAgICAgIDwvc3Bhbj4gICAgICAg
ICAgICAgPC9kaXY+ICAgICAgICAgPC9kaXY+ICAgICA8L2Rpdj4gPC9uYXY+IDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCIgc3R5bGU9Im1hcmdpbi10b3A6IDcwcHg7Ij4gICAgIDx1bCBjbGFzcz0iYnJlYWRjcnVtYiIgaWQ9ImJyZWFkY3J1bWIiPjwvdWw+ICAgICAgPGRpdiBpZD0idXBsb2FkX3
Byb2dyZXNzIj48L2Rpdj4gICAgIDx0YWJsZSBpZD0idGFibGUiIGNsYXNzPSJ0YWJsZSB0YWJsZS1zdHJpcGVkIHRhYmxlLWhvdmVyIj4gICAgICAgICA8dGhlYWQ+ICAgICAgICAgPHRyPiAgICAgICAgICAgICA8dGggc3R5bGU9J2N1cnNvcjpwb2ludGVyOyc+TmFtZTwvdGg+ICAgICAgICAgICAgIDx0
aCBzdHlsZT0nY3Vyc29yOnBvaW50ZXI7Jz5TaXplPC90aD4gICAgICAgICAgICAgPHRoIHN0eWxlPSdjdXJzb3I6cG9pbnRlcjsnPk1vZGlmaWVkPC90aD4gICAgICAgICAgICAgPHRoIHN0eWxlPSdjdXJzb3I6cG9pbnRlcjsnPlBlcm1pc3Npb25zPC90aD4gICAgICAgICAgICAgPHRoIHN0eWxlPSdjdX
Jzb3I6cG9pbnRlcjsnPkFjdGlvbnM8L3RoPiAgICAgICAgIDwvdHI+ICAgICAgICAgPC90aGVhZD4gICAgICAgICA8dGJvZHkgaWQ9Imxpc3QiPiAgICAgICAgICA8L3Rib2R5PiAgICAgPC90YWJsZT4gICAgIDxmb290ZXI+c2ltcGxlIHBocCBmaWxlbWFuYWdlciBieSA8YSBocmVmPSJodHRwczovL2dp
dGh1Yi5jb20vamNhbXBiZWxsMSI+amNhbXBiZWxsMTwvYT4gYW5kIHR3ZWFrZWQgYnkgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0VkdWFyZG9PbGl2ZWlyYSI+RWR1YXJkb09saXZlaXJhPC9hPiA8Zm9vdGVyPiA8L2Rpdj4gPC9ib2R5PiA8L2h0bWw+